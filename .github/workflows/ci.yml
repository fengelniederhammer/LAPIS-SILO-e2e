name: LAPIS-SILO E2E Tests
on:

  workflow_dispatch:
  pull_request:

  push:


jobs:
    e2e-tests:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
#            - name: Use Node.js
#              uses: actions/setup-node@v4
#              with:
#                  node-version-file: '.nvmrc'
#            - name: prepare pnpm
#              run: npm i -g pnpm
#            - name: pnpm i
#              run: pnpm i
            - name: test
              id: test
              run: |
                  echo "oh oh the tests failed!"
                  exit 1
              env:
                  LAPIS_TAG: latest
                  SILO_TAG: latest
#            - name: Upload test results
#              uses: actions/upload-artifact@v4
#              if: always()
#              with:
#                  name: test-results
#                  path: testsets/**/output
            - name: Notify failed build
              uses: jayqi/failed-build-issue-action@v1
              if: failure()
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  title-template: My title
                  body-template: |
                      My Body
                      {{runNumber}}
                      payload
                      {{payload}}
                      event name
                      {{eventName}}
                      
                      steps
                      ${{ toJSON(steps.test) }}
                      steps output
                      ${{ toJSON(steps.test.outputs) }}
                      
                      ---
                      
                      {{github.event}}
                      {{steps.test}}
                      End body
              env:
                  IM_HERE: 'hello from env'

#    check-format:
#        name: Check format
#        runs-on: ubuntu-latest
#        steps:
#            - uses: actions/checkout@v4
#            - uses: actions/setup-node@v4
#              with:
#                  node-version-file: '.nvmrc'
#            - uses: actions/cache@v4
#              with:
#                  path: ~/.npm
#                  key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
#            - run: npm ci
#            - run: npm run check-format
#
#    check-types:
#        name: Check types
#        runs-on: ubuntu-latest
#        steps:
#            - uses: actions/checkout@v4
#            - uses: actions/setup-node@v4
#              with:
#                  node-version-file: '.nvmrc'
#            - uses: actions/cache@v4
#              with:
#                  path: ~/.npm
#                  key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
#            - run: npm ci
#            - run: npm run check-types
